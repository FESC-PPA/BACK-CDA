generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model attendance {
  attendanceId               Int          @id @unique(map: "Attendance_attendanceId_key") @default(autoincrement())
  date                       DateTime
  late                       Int
  userScheduleUserScheduleId Int
  userschedule               userschedule @relation(fields: [userScheduleUserScheduleId], references: [userScheduleId], map: "Attendance_userScheduleUserScheduleId_fkey")
  excuse                     excuse[]

  @@index([userScheduleUserScheduleId], map: "Attendance_userScheduleUserScheduleId_fkey")
}

model auth {
  authId     Int      @id @unique(map: "Auth_authId_key") @default(autoincrement())
  email      String
  password   String
  active     Boolean? @default(true)
  userUserId Int
  user       user     @relation(fields: [userUserId], references: [userId], map: "Auth_userUserId_fkey")

  @@index([userUserId], map: "Auth_userUserId_fkey")
}

model based {
  basedId            Int          @id @unique(map: "Based_basedId_key") @default(autoincrement())
  name               String
  perimeterLocations String       @db.LongText
  organizationId     Int
  organization       organization @relation(fields: [organizationId], references: [organizationId], map: "Based_organizationId_fkey")
  schedule           schedule[]

  @@index([organizationId], map: "Based_organizationId_fkey")
}

model excuse {
  excuseId               Int        @id @unique(map: "Excuse_excuseId_key") @default(autoincrement())
  status                 Int        @default(0)
  resolutionDate         DateTime?
  comment                String?
  attendanceAttendanceId Int
  userUserId             Int
  attendance             attendance @relation(fields: [attendanceAttendanceId], references: [attendanceId], map: "Excuse_attendanceAttendanceId_fkey")
  user                   user       @relation(fields: [userUserId], references: [userId], map: "Excuse_userUserId_fkey")

  @@index([attendanceAttendanceId], map: "Excuse_attendanceAttendanceId_fkey")
  @@index([userUserId], map: "Excuse_userUserId_fkey")
}

model facialdata {
  facialDataId Int    @id @unique(map: "FacialData_facialDataId_key") @default(autoincrement())
  data         String
  userUserId   Int
  user         user   @relation(fields: [userUserId], references: [userId], map: "FacialData_userUserId_fkey")

  @@index([userUserId], map: "FacialData_userUserId_fkey")
}

model organization {
  organizationId Int     @id @unique(map: "Organization_organizationId_key") @default(autoincrement())
  nit            String
  name           String
  based          based[]
  user           user[]
}

model role {
  roleId  Int     @id @unique(map: "Role_roleId_key") @default(autoincrement())
  role    String
  details String?
  user    user[]
}

model schedule {
  scheduleId   Int            @id @unique(map: "Schedule_scheduleId_key") @default(autoincrement())
  name         String
  basedBasedId Int
  based        based          @relation(fields: [basedBasedId], references: [basedId], map: "Schedule_basedBasedId_fkey")
  userschedule userschedule[]
  workdays     workdays[]

  @@index([basedBasedId], map: "Schedule_basedBasedId_fkey")
}

model user {
  userId         Int            @id @unique(map: "User_userId_key") @default(autoincrement())
  identify       String
  firstName      String
  lastName       String
  phoneNumber    String?
  roleRoleId     Int
  organizationId Int
  auth           auth[]
  excuse         excuse[]
  facialdata     facialdata[]
  organization   organization   @relation(fields: [organizationId], references: [organizationId], map: "User_organizationId_fkey")
  role           role           @relation(fields: [roleRoleId], references: [roleId], map: "User_roleRoleId_fkey")
  userschedule   userschedule[]

  @@index([organizationId], map: "User_organizationId_fkey")
  @@index([roleRoleId], map: "User_roleRoleId_fkey")
}

model userschedule {
  userScheduleId     Int          @id @unique(map: "UserSchedule_userScheduleId_key") @default(autoincrement())
  scheduleScheduleId Int
  userUserId         Int
  attendance         attendance[]
  schedule           schedule     @relation(fields: [scheduleScheduleId], references: [scheduleId], map: "UserSchedule_scheduleScheduleId_fkey")
  user               user         @relation(fields: [userUserId], references: [userId], map: "UserSchedule_userUserId_fkey")

  @@index([scheduleScheduleId], map: "UserSchedule_scheduleScheduleId_fkey")
  @@index([userUserId], map: "UserSchedule_userUserId_fkey")
}

model weekdays {
  weekDaysId Int        @id @unique(map: "WeekDays_weekDaysId_key") @default(autoincrement())
  day        String
  workdays   workdays[]
}

model workdays {
  workDaysId         Int      @id @unique(map: "WorkDays_workDaysId_key") @default(autoincrement())
  startTime          DateTime
  endTime            DateTime
  weekDaysWeekDaysId Int
  scheduleScheduleId Int
  schedule           schedule @relation(fields: [scheduleScheduleId], references: [scheduleId], map: "WorkDays_scheduleScheduleId_fkey")
  weekdays           weekdays @relation(fields: [weekDaysWeekDaysId], references: [weekDaysId], map: "WorkDays_weekDaysWeekDaysId_fkey")

  @@index([scheduleScheduleId], map: "WorkDays_scheduleScheduleId_fkey")
  @@index([weekDaysWeekDaysId], map: "WorkDays_weekDaysWeekDaysId_fkey")
}
